#!/usr/bin/env node

/**
 * Module dependencies
 */

var program = require('commander');
var _ = require('lodash');
var package = require('../package.json');
var chalk = require('chalk');
var NOOP = function() {};
var Q = require('q');

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
function loadTemplate(name){

}
function write(path, str) {
  
}
function handleCreate(dir){
	if(!dir) return console.log("try -h for help");
	var destPath = program.args.shift() || '.';
	var path = require('path');
  	var name = path.basename(path.resolve(destPath));
  	var fs = require('fs');

  	var mkdirQ = Q.denodeify(fs.mkdir);

	mkdirQ(destPath, 0755).then(function(err){
    	if (err) throw err;
    	console.log('    '+chalk.cyan('create')+' : ' + destPath+'/');
      console.log(chalk.magenta("\n    Dirs"))
    	var dirs = [
        'bin',
        'config',
        'core',
        'public',
        'views'
      ];

      var subdirs = [
        'core/controllers',
        'core/services',
        'public/css',
        'public/js',
        'public/images'
      ];

    	var createDirs = [];

    	for (var i = dirs.length - 1; i >= 0; i--) {
    		createDirs.push(mkdirQ(destPath+'/'+dirs[i], 0755));
    	};

    	Q.all(createDirs).then(function(messages){
    		for (var i = dirs.length - 1; i >= 0; i--) {
    			console.log('       '+chalk.cyan('create')+' : |-> '+dirs[i]+'/');
    		};
        for (var i = subdirs.length - 1; i >= 0; i--) {
          var dir = subdirs[i];
          fs.mkdirSync(destPath+'/'+dir, 0755);
          console.log('       '+chalk.cyan('create')+' : |-> '+dir+'/');
        };

        var files = [
          '/public/css/style.css',
          '/core/controllers/MainController.js',
          '/views/index.jade',
          '/views/error.jade',
          '/views/layout.jade',
          '/config/db.js',
          '/config/models.js',
          '/config/routes.js',
          '/config/config.js',
          '/core/bind.js',
          '/core/sockets.js',
          '/bin/www',
          '/app.js',
        ];

        console.log(chalk.magenta("\n    Files"))
        for (var i = files.length - 1; i >= 0; i--) {
          var file = files[i];
          
          var from = path.join(__dirname, '..', 'templates', file);
          var to = destPath+file;
          
          var info = fs.readFileSync(from);
          var a = fs.writeFileSync(to, info, { mode: 0666 });
          console.log('       '+chalk.cyan('create')+' : |-> '+file.substring(1)+'/');
        };

        var pkg = {
          "name": "webjs",
          "version": "0.2.0",
          "private": true,
          "scripts": {
            "start": "node ./bin/www"
          },
          "dependencies": {
            "body-parser": "~1.13.2",
            "cookie-parser": "~1.3.5",
            "debug": "~2.2.0",
            "express": "~4.13.1",
            "jade": "~1.11.0",
            "morgan": "~1.6.1",
            "serve-favicon": "~2.3.0",
            "socket.io": "^1.3.6"
          }
        }

        
        pkg.dependencies['jade'] = '~1.11.0';
        // pkg.dependencies['stylus'] = '0.42.3';

        fs.writeFileSync(destPath+'/package.json', JSON.stringify(pkg, null, 2), { mode: 0666 });
        console.log(chalk.red("done"))
    	})
  	});
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

program.version(package.version, '-v, --version');
process.argv = _.map(process.argv, function(arg) {
	return (arg === '-V') ? '-v' : arg;
});

program
	.command('new [dir_path]')
	.action(handleCreate)

program.parse(process.argv);